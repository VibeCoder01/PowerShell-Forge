
import type { BasePowerShellCommand } from '@/types/powershell';

export const mockCommands: BasePowerShellCommand[] = [
  // System Management
  {
    id: 'Get-Process',
    name: 'Get-Process',
    category: 'System Management',
    parameters: [{ name: 'Name' }, { name: 'Id' }, { name: 'ComputerName' }, { name: 'IncludeUserName' }, { name: 'Module' }, { name: 'FileVersionInfo' }],
    description: 'Gets the processes that are running on the local computer or a remote computer.',
  },
  {
    id: 'Start-Process',
    name: 'Start-Process',
    category: 'System Management',
    parameters: [{ name: 'FilePath' }, { name: 'ArgumentList' }, { name: 'Verb' }, { name: 'WorkingDirectory' }, { name: 'PassThru' }, { name: 'Wait' }],
    description: 'Starts one or more processes on the local computer.',
  },
  {
    id: 'Stop-Process',
    name: 'Stop-Process',
    category: 'System Management',
    parameters: [{ name: 'Name' }, { name: 'Id' }, { name: 'InputObject' }, { name: 'Force' }, { name: 'PassThru' }],
    description: 'Stops one or more running processes.',
  },
  {
    id: 'Get-Service',
    name: 'Get-Service',
    category: 'System Management',
    parameters: [{ name: 'Name' }, { name: 'DisplayName' }, { name: 'ComputerName' }, { name: 'DependentServices' }, { name: 'RequiredServices' }],
    description: 'Gets the services on a local or remote computer.',
  },
  {
    id: 'Start-Service',
    name: 'Start-Service',
    category: 'System Management',
    parameters: [{ name: 'Name' }, { name: 'DisplayName' }, { name: 'InputObject' }, { name: 'PassThru' }],
    description: 'Starts one or more stopped services.',
  },
  {
    id: 'Stop-Service',
    name: 'Stop-Service',
    category: 'System Management',
    parameters: [{ name: 'Name' }, { name: 'DisplayName' }, { name: 'InputObject' }, { name: 'Force' }, { name: 'PassThru' }, { name: 'NoWait' }],
    description: 'Stops one or more running services.',
  },
  {
    id: 'Restart-Service',
    name: 'Restart-Service',
    category: 'System Management',
    parameters: [{ name: 'Name' }, { name: 'DisplayName' }, { name: 'InputObject' }, { name: 'Force' }, { name: 'PassThru' }],
    description: 'Stops and then starts one or more services.',
  },
  {
    id: 'Get-EventLog',
    name: 'Get-EventLog',
    category: 'System Management',
    parameters: [{ name: 'LogName' }, { name: 'ComputerName' }, { name: 'Newest' }, { name: 'After' }, { name: 'Before' }, { name: 'Source' }, { name: 'Message' }],
    description: 'Gets events in local or remote event logs.',
  },
  {
    id: 'Clear-EventLog',
    name: 'Clear-EventLog',
    category: 'System Management',
    parameters: [{ name: 'LogName' }, { name: 'ComputerName' }],
    description: 'Clears all entries from specified event logs on the local or remote computers.',
  },
  {
    id: 'Get-HotFix',
    name: 'Get-HotFix',
    category: 'System Management',
    parameters: [{ name: 'Id' }, { name: 'Description' }, { name: 'ComputerName' }],
    description: 'Gets the hotfixes that have been applied to the local and remote computers.',
  },
  {
    id: 'Restart-Computer',
    name: 'Restart-Computer',
    category: 'System Management',
    parameters: [{ name: 'ComputerName' }, { name: 'Force' }, { name: 'Wait' }, { name: 'For' }, { name: 'Timeout' }, { name: 'Delay' }],
    description: 'Restarts the operating system on local and remote computers.',
  },
  {
    id: 'Stop-Computer',
    name: 'Stop-Computer',
    category: 'System Management',
    parameters: [{ name: 'ComputerName' }, { name: 'Force' }],
    description: 'Shuts down local and remote computers.',
  },

  // File & Item Management
  {
    id: 'Get-Content',
    name: 'Get-Content',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'TotalCount' }, { name: 'Tail' }, { name: 'Raw' }, { name: 'Encoding' }, { name: 'Delimiter' }, { name: 'Wait' }],
    description: 'Gets the content of the item at the specified location.',
  },
  {
    id: 'Set-Content',
    name: 'Set-Content',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Value' }, { name: 'NoNewline' }, { name: 'Encoding' }, { name: 'Force' }],
    description: 'Writes new content or replaces the content in a file.',
  },
  {
    id: 'Add-Content',
    name: 'Add-Content',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Value' }, { name: 'NoNewline' }, { name: 'Encoding' }, { name: 'Force' }],
    description: 'Adds content to the specified items, such as adding words to a file.',
  },
  {
    id: 'Clear-Content',
    name: 'Clear-Content',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Force' }],
    description: 'Deletes the content of an item, such as the text in a file, but does not delete the item.',
  },
  {
    id: 'Get-ChildItem',
    name: 'Get-ChildItem',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Recurse' }, { name: 'Depth' }, { name: 'File' }, { name: 'Directory' }, { name: 'Filter' }, { name: 'Include' }, { name: 'Exclude' }, { name: 'Name' }, { name: 'Force' }],
    description: 'Gets the items and child items in one or more specified locations.',
  },
  {
    id: 'Copy-Item',
    name: 'Copy-Item',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Destination' }, { name: 'Recurse' }, { name: 'Force' }, { name: 'Filter' }, { name: 'Container' }],
    description: 'Copies an item from one location to another.',
  },
  {
    id: 'Move-Item',
    name: 'Move-Item',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Destination' }, { name: 'Force' }, { name: 'Filter' }],
    description: 'Moves an item from one location to another.',
  },
  {
    id: 'Remove-Item',
    name: 'Remove-Item',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Recurse' }, { name: 'Force' }, { name: 'Filter' }],
    description: 'Deletes items.',
  },
  {
    id: 'New-Item',
    name: 'New-Item',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'Name' }, { name: 'ItemType' }, { name: 'Value' }, { name: 'Force' }],
    description: 'Creates a new item.',
  },
  {
    id: 'Rename-Item',
    name: 'Rename-Item',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'NewName' }, { name: 'Force' }, { name: 'PassThru' }],
    description: 'Renames an item in a PowerShell provider namespace.',
  },
  {
    id: 'Test-Path',
    name: 'Test-Path',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'PathType' }, { name: 'IsValid' }, { name: 'OlderThan' }, { name: 'NewerThan' }],
    description: 'Determines whether all elements of a path exist.',
  },
  {
    id: 'Get-ItemProperty',
    name: 'Get-ItemProperty',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Name' }, { name: 'Filter' }],
    description: 'Gets the properties of a specified item.',
  },
  {
    id: 'Set-ItemProperty',
    name: 'Set-ItemProperty',
    category: 'File & Item Management',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Name' }, { name: 'Value' }, { name: 'Force' }],
    description: 'Creates or changes the value of a property of an item.',
  },

  // PowerShell Core & Scripting
  {
    id: 'Write-Host',
    name: 'Write-Host',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'Object' }, { name: 'ForegroundColor' }, { name: 'BackgroundColor' }, { name: 'NoNewline' }, { name: 'Separator' }],
    description: 'Writes customized output to a host.',
  },
  {
    id: 'Write-Output',
    name: 'Write-Output',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'InputObject' }, { name: 'NoEnumerate' }],
    description: 'Sends the specified objects to the next command in the pipeline. If the command is the last command in the pipeline, the objects are displayed in the console.',
  },
  {
    id: 'Get-Command',
    name: 'Get-Command',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'Name' }, { name: 'Module' }, { name: 'CommandType' }, { name: 'Syntax' }, { name: 'Verb' }, { name: 'Noun' }],
    description: 'Gets all commands that are installed on the computer, including cmdlets, aliases, functions, filters, scripts, and applications.',
  },
  {
    id: 'Get-Help',
    name: 'Get-Help',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'Name' }, { name: 'Path' }, { name: 'Category' }, { name: 'Full' }, { name: 'Detailed' }, { name: 'Examples' }, { name: 'Parameter' }, { name: 'Online' }],
    description: 'Displays information about PowerShell commands and concepts.',
  },
  {
    id: 'Get-History',
    name: 'Get-History',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'Id' }, { name: 'Count' }],
    description: 'Gets a list of the commands entered during the current session.',
  },
  {
    id: 'Start-Sleep',
    name: 'Start-Sleep',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'Seconds' }, { name: 'Milliseconds' }],
    description: 'Suspends the activity in a script or session for the specified period of time.',
  },
  {
    id: 'Invoke-Expression',
    name: 'Invoke-Expression',
    category: 'PowerShell Core & Scripting',
    parameters: [{ name: 'Command' }],
    description: 'Runs commands or expressions on the local computer.',
  },

  // Data Handling & Formatting
  {
    id: 'ConvertTo-Json',
    name: 'ConvertTo-Json',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'InputObject' }, { name: 'Depth' }, { name: 'Compress' }],
    description: 'Converts an object to a JSON-formatted string.',
  },
  {
    id: 'ConvertFrom-Json',
    name: 'ConvertFrom-Json',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'InputObject' }],
    description: 'Converts a JSON-formatted string to a custom object.',
  },
  {
    id: 'Export-Csv',
    name: 'Export-Csv',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'InputObject' }, { name: 'Path' }, { name: 'LiteralPath' }, { name: 'NoTypeInformation' }, { name: 'Delimiter' }, { name: 'Encoding' }, { name: 'Append' }, { name: 'Force' }],
    description: 'Converts objects into a series of comma-separated value (CSV) strings and saves them in a CSV file.',
  },
  {
    id: 'Import-Csv',
    name: 'Import-Csv',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Delimiter' }, { name: 'Header' }, { name: 'Encoding' }],
    description: 'Creates table-like custom objects from the items in a CSV file.',
  },
  {
    id: 'Select-Object',
    name: 'Select-Object',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'Property' }, { name: 'ExcludeProperty' }, { name: 'ExpandProperty' }, { name: 'Unique' }, { name: 'First' }, { name: 'Last' }, { name: 'Skip' }, { name: 'SkipLast' }, { name: 'InputObject' }],
    description: 'Selects objects or object properties.',
  },
  {
    id: 'Sort-Object',
    name: 'Sort-Object',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'Property' }, { name: 'Descending' }, { name: 'Unique' }, { name: 'CaseSensitive' }, { name: 'InputObject' }],
    description: 'Sorts objects by property values.',
  },
  {
    id: 'Measure-Object',
    name: 'Measure-Object',
    category: 'Data Handling & Formatting',
    parameters: [{ name: 'Property' }, { name: 'Sum' }, { name: 'Average' }, { name: 'Maximum' }, { name: 'Minimum' }, { name: 'Line' }, { name: 'Word' }, { name: 'Character' }, { name: 'InputObject' }],
    description: 'Calculates the numeric properties of objects, and the characters, words, and lines in string objects, such as files of text.',
  },

  // Networking
  {
    id: 'Invoke-WebRequest',
    name: 'Invoke-WebRequest',
    category: 'Networking',
    parameters: [{ name: 'Uri' }, { name: 'Method' }, { name: 'OutFile' }, { name: 'Body' }, { name: 'Headers' }, { name: 'ContentType' }, { name: 'TimeoutSec' }],
    description: 'Gets content from a web page on the Internet.',
  },
  {
    id: 'Invoke-RestMethod',
    name: 'Invoke-RestMethod',
    category: 'Networking',
    parameters: [{ name: 'Uri' }, { name: 'Method' }, { name: 'Body' }, { name: 'Headers' }, { name: 'ContentType' }, { name: 'OutFile' }, { name: 'TimeoutSec' }],
    description: 'Sends an HTTP or HTTPS request to a RESTful web service.',
  },
  {
    id: 'Test-Connection',
    name: 'Test-Connection',
    category: 'Networking',
    parameters: [{ name: 'ComputerName' }, { name: 'Count' }, { name: 'BufferSize' }, { name: 'Quiet' }, { name: 'TimeToLive' }],
    description: 'Sends ICMP echo request packets ("pings") to one or more remote computers.',
  },
  {
    id: 'Resolve-DnsName',
    name: 'Resolve-DnsName',
    category: 'Networking',
    parameters: [{ name: 'Name' }, { name: 'Type' }, { name: 'Server' }, { name: 'DnsOnly' }],
    description: 'Performs a DNS query for the specified name.',
  },
  
  // Security
  {
    id: 'Get-Acl',
    name: 'Get-Acl',
    category: 'Security',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'Audit' }],
    description: 'Gets the security descriptor for a resource, such as a file or registry key.',
  },
  {
    id: 'Set-Acl',
    name: 'Set-Acl',
    category: 'Security',
    parameters: [{ name: 'Path' }, { name: 'LiteralPath' }, { name: 'AclObject' }],
    description: 'Changes the security descriptor of a specified item, such as a file or a registry key.',
  },
  {
    id: 'Get-ExecutionPolicy',
    name: 'Get-ExecutionPolicy',
    category: 'Security',
    parameters: [{ name: 'Scope' }, { name: 'List' }],
    description: 'Gets the execution policies for the current session.',
  },
  {
    id: 'Set-ExecutionPolicy',
    name: 'Set-ExecutionPolicy',
    category: 'Security',
    parameters: [{ name: 'ExecutionPolicy' }, { name: 'Scope' }, { name: 'Force' }],
    description: 'Changes the user preference for the PowerShell execution policy.',
  },

  // Application Management
  {
    id: 'Get-AppxPackage',
    name: 'Get-AppxPackage',
    category: 'Application Management',
    parameters: [{ name: 'Name' }, { name: 'Publisher' }, { name: 'AllUsers' }],
    description: 'Gets a list of the app packages that are installed in a user profile.',
  },
  {
    id: 'Add-AppxPackage',
    name: 'Add-AppxPackage',
    category: 'Application Management',
    parameters: [{ name: 'Path' }, { name: 'DependencyPath' }, { name: 'Register' }, { name: 'DisableDevelopmentMode' }],
    description: 'Adds a signed app package to a user account.',
  },
  {
    id: 'Remove-AppxPackage',
    name: 'Remove-AppxPackage',
    category: 'Application Management',
    parameters: [{ name: 'Package' }, { name: 'AllUsers' }, { name: 'PreserveApplicationData' }],
    description: 'Removes an app package from a user account.',
  },

  // Hyper-V
  {
    id: 'Get-VM',
    name: 'Get-VM',
    category: 'Hyper-V',
    parameters: [{ name: 'Name' }, { name: 'ComputerName' }, { name: 'Id' }],
    description: 'Gets the virtual machines from one or more Hyper-V hosts.',
  },
  {
    id: 'Start-VM',
    name: 'Start-VM',
    category: 'Hyper-V',
    parameters: [{ name: 'Name' }, { name: 'ComputerName' }, { name: 'VM' }],
    description: 'Starts a virtual machine.',
  },
  {
    id: 'Stop-VM',
    name: 'Stop-VM',
    category: 'Hyper-V',
    parameters: [{ name: 'Name' }, { name: 'ComputerName' }, { name: 'VM' }, { name: 'Force' }, { name: 'TurnOff' }, { name: 'Save' }],
    description: 'Shuts down, turns off, or saves a virtual machine.',
  },
];
